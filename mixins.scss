//==============================================================================================
//                                    M  I  X  I  N  S
//==============================================================================================
//Go to bottom to add your specific mixin

//=======================
// Setting up the Media Queries
//=======================
@mixin MQ-lg-screen {@media screen and (max-width: $lg) {@content}}
@mixin MQ-md-screen {@media screen and (max-width: $md) {@content}}
@mixin MQ-sm-screen {@media screen and (max-width: $sm) {@content}}
@mixin MQ-xs-screen {@media screen and (max-width: $xs) {@content}}
@mixin MQ-xxs-screen {@media screen and (max-width: $xxs) {@content}}


@mixin base-transition {@include transition(0.3s, all, ease-in-out);}


//=======================
//  Rem font size
//=======================
// @include font-size(14px)
@function calculateRem($size) {
  $remSize: $size / 16px;
  @return $remSize * 1rem;
}

@mixin font-size($size) {
  font-size: $size;
  font-size: calculateRem($size);
}


//=======================
//      Fonts
//=======================
@mixin body-face {font-family: 'Roboto', sans-serif;}
@mixin title-face { font-family: 'Roboto', sans-serif;}
@mixin body-font{@include body-face;@include font-size(17px);color:#333;line-height:1.5em;margin-bottom:1em;}
@mixin header-font{@include title-face;line-height:1.5em;margin-bottom:1em;color:#000;text-transform:uppercase;font-weight:600;}




//=======================
//      Buttons
//=======================
@mixin button-bg($bg) {
  background: $bg;
  &:hover, &:active, &.active {
    background:darken($bg,10%);
    transition: all 0.3s ease;
    color: #fff;
    span {color:#fff;}
  }
  &:focus {
    background:darken($bg,20%);
  }
}



//A link state
//ussage @include links(#00c, #0cc, #c0c, #ccc, #cc0);
@mixin links ($link, $visit, $hover, $active) {
  a {
    color: $link;
    &:visited {
      color: $visit;
    }
    &:hover {
      color: $hover;
    }
    &:active {
      color: $active;
    }
  }
}


//usage @include hover-style{...}
@mixin hover-style() {
  &:hover,
  &:focus,
  &:active { @content }
}



//=======================
//  Border radius
//=======================
// @include border-radius(X)
@mixin border-radius($radius) {-webkit-border-radius: $radius;-moz-border-radius: $radius;-ms-border-radius: $radius;border-radius: $radius;}


//=======================
//  Text overflow
//=======================
//@include text-truncate;
@mixin text-truncate {overflow: hidden;text-overflow: ellipsis;white-space: nowrap;}


//=======================
//  Opacity
//=======================
//@include opacity(0.8);
@mixin opacity($opacity) {opacity: $opacity;$opacity-ie: $opacity * 100;filter: alpha(opacity=$opacity-ie); //IE8}

  //=======================
  //  Position absolute
  //=======================
  //@include abs-pos(10px, 10px, 5px, 15px);
  @mixin abs-pos ($top: auto, $right: auto, $bottom: auto, $left: auto) {top: $top;right: $right;bottom: $bottom;left: $left;position: absolute;}

  //=======================
  //  Clearfix
  //=======================
  // @include clearfix();

  @mixin clearfix() {
    &:before,
    &:after {}
    content: "";display: table;
  }
  &:after {clear: both;}
}

//=======================
//  Transitions
//=======================
//@include transition(all, 0.3s, ease);

@mixin transition($transition-property, $transition-time, $method) {
  -webkit-transition: $transition-property $transition-time $method;
  -moz-transition: $transition-property $transition-time $method;
  -ms-transition: $transition-property $transition-time $method;
  -o-transition: $transition-property $transition-time $method;
  transition: $transition-property $transition-time $method;
}


//=======================
//  Center vertically and/or horizontally an absolute positioned element
//=======================
// @include center(x)

@mixin center($xy:xy) {
  @if $xy == xy {
    left: 50%;
    top: 50%;
    bottom: auto;
    right: auto;
    @include transform(translateX(-50%) translateY(-50%));
  }
  @else if $xy == x {
    left: 50%;
    right: auto;
    @include transform(translateX(-50%));
  }
  @else if $xy == y {
    top: 50%;
    bottom: auto;
    @include transform(translateY(-50%));
  }
}


//=======================
//  Center block
//=======================
// @include center-block
@mixin center-block {
  float: none;
  display: block;
  margin-left: auto;
  margin-right: auto;
}


//=======================
//  Retina / Double px Density Screens
//=======================

@mixin high-px-screens {
  @media
  only screen and ( -webkit-min-device-pixel-ratio: 1.3 ),
  only screen and (    min--moz-device-pixel-ratio: 1.3 ),
  only screen and (      -o-min-device-pixel-ratio: 2.6/2 ), /* returns 1.3, see Dev.Opera */
  only screen and (         min-device-pixel-ratio: 1.3 ),
  only screen and ( min-resolution: 124.8dpi ),
  only screen and ( min-resolution: 1.3dppx ){@content;}
}



//End Mixins

